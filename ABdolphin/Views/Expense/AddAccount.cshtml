@model ABdolphin.Models.Expenses

@{
    ViewBag.Title = "AddAccount";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>

@using (Html.BeginForm("AddAccount", "Expense", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data", @autocomplete = "off" }))
{




    <div class="contents">
        <div class="atbd-page-content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12 mt-2">
                        <div class="card card-default card-md mb-4">
                            <div class="card-body">
                                <ul class="atbd-breadcrumb nav">
                                    <li class="atbd-breadcrumb__item">
                                        <a href="#">
                                            <span class="la la-home"></span>
                                        </a>
                                        <span class="breadcrumb__seperator">
                                            <span class="la la-slash"></span>
                                        </span>

                                    </li>
                                    <li class="atbd-breadcrumb__item">
                                        <a href="#">Expense Management</a>
                                        <span class="breadcrumb__seperator">
                                            <span class="la la-slash"></span>
                                        </span>
                                    </li>

                                    <li class="atbd-breadcrumb__item">
                                        <span>Add Account</span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div class="card">
                <div class="card-header">
                    <h2>Add Account</h2>
                    <p class="text-danger mb-0 p-left-50">
                        @TempData["MsgAccount"]
                    </p>
                    @*<div class="breadcrumb-action justify-content-between">
                        <div class="action-btn">
                            <a class="btn btn-primary btn-sm"  href="/Master/ExpenseCategoryMaster"> <i class="fa fa-plus-circle text-white"></i> Add New</a>
                        </div>
                    </div>*@
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            Account Holder Name<span style="color:red">*</span>
                            @Html.TextBoxFor(m => m.AcountHolder, new { @class = "form-control", @placeholder = "Account Holder Name" })
                            @Html.HiddenFor(m => m.Pk_BankId)
                        </div>
                        <div class="col-md-4 mb-3">
                            Account Number<span style="color:red">*</span>
                            @Html.TextBoxFor(m => m.AccountNumber, new { @class = "form-control", @Placeholder = "Account Number" })
                        </div>
                        <div class="col-md-4 mb-3">
                            IFSC Code<span style="color:red">*</span>
                            @Html.TextBoxFor(m => m.IFSCCode, new { @class = "form-control", @Placeholder = "IFSC Code" })
                        </div>

                        <div class="col-md-4 mb-3">
                            Bank Name <span style="color:red">*</span>
                            @Html.TextBoxFor(m => m.BankName, new { @class = "form-control", @Placeholder = " Bank Name" })
                        </div>
                        <div class="col-md-4 mb-3">
                            Branch Name <span style="color:red">*</span>
                            @Html.TextBoxFor(m => m.BranchName, new { @class = "form-control", @Placeholder = "Branch Name" })
                        </div>
                        <div class="col-md-4 mb-3">
                            Amount <span style="color:red">*</span>
                            @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @Placeholder = "Amount", @onkeypress = "return isNumberOrDecimal(event);" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-lg-6 mb-3">
                            <div class="d-flex">
                               @if (Model.EncryptKey == null)
                               {
                                <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Save" id="btnSave" name="btnSave" />
                               }
                               else
                               {
                                <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Update" id="btnUpdate" name="btnUpdate" />
                               }

                            <a class="btn btn-info" href="/Expense/AccountList" style="margin-left:5px;">Back To List</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <input type="hidden" id="UserType" value="@Session["UserType"]" />
            <input type="hidden" id="UserTypeName" value="@Session["UserTypeName"]" />
        </div>
    </div>
    
}

<script src="~/files/bower_components/jquery/js/jquery.min.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.0/themes/smoothness/jquery-ui.css">
<script>
    $(document).ready(function () {
        $("#divload").css({ 'display': 'none' });
        var UserType = $('#UserType').val();
        var UserTypeName = $('#UserTypeName').val();
        debugger
        if (UserType == 'Admin' && UserTypeName != 'Admin' && UserTypeName != "") {
            GetMenuDetails();
        }
    });
    function GetMenuDetails() {
        debugger
        var URL = "/Expense/AccountList";
        $.ajax({
            type: "POST",
            url: "/Master/GetMenuDetails",
            data: { URL: URL },
            dataType: "json",
            //contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var obj = jQuery.parseJSON(data);
                console.log(obj)
                for (var i = 0; i < obj.length; i++) {
                    if (obj[i].FormSave == true) {
                        $('#btnSave').show();
                        $("#btnSave").removeAttr('disabled');
                    }
                    else {
                        $('#btnSave').hide();
                        $("#btnSave").attr('disabled', 'disabled');
                    }
                    debugger
                    if (obj[i].FormUpdate == true && $('#EncryptKey').val() != "") {
                        $('#btnUpdate').show();

                        $("#btnUpdate").removeAttr('disabled');
                    }
                    else {
                        $('#btnUpdate').hide();
                        $("#btnUpdate").attr('disabled', 'disabled');
                    }
                }
            },
            error: function () {
                alert("Error occured!!")
            }
        });
    }
    function isNumberOrDecimal(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function validateform() {
        $("#divload").css({ 'display': 'none' });
        $(".errortext").removeClass("errortext");
        if ($('#AcountHolder').val() == '') {
            $("#AcountHolder").addClass('errortext');
            $('#AcountHolder').focus();
            return false;
        }
        if ($('#AccountNumber').val() == '') {
            $("#AccountNumber").addClass('errortext');
            $('#AccountNumber').focus();
            return false;
        }
        if ($('#IFSCCode').val() == '') {
            $("#IFSCCode").addClass('errortext');
            $('#IFSCCode').focus();
            return false;
        }
        if ($('#BankName').val() == '') {
            $("#BankName").addClass('errortext');
            $('#BankName').focus();
            return false;
        }
        if ($('#BranchName').val() == '') {
            $("#BranchName").addClass('errortext');
            $('#BranchName').focus();
            return false;
        }
        if ($('#Amount').val() == '') {
            $("#Amount").addClass('errortext');
            $('#Amount').focus();
            return false;
        }
        $("#divload").css({ 'display': '' });
        return true;
    }
</script>