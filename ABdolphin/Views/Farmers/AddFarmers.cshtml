@model ABdolphin.Models.Farmer

@{
    ViewBag.Title = "AddFarmers";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}


@using (Html.BeginForm("AddFarmers", "Farmers", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data", @autocomplete = "off" }))
{
    <div class="contents">
        <div class="atbd-page-content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12 mt-2">
                        <div class="card card-default card-md mb-4">
                            <div class="card-body">
                                <ul class="atbd-breadcrumb nav">
                                    <li class="atbd-breadcrumb__item">
                                        <a href="#">
                                            <span class="la la-home"></span>
                                        </a>
                                        <span class="breadcrumb__seperator">
                                            <span class="la la-slash"></span>
                                        </span>

                                    </li>
                                    <li class="atbd-breadcrumb__item">
                                        <a href="#">Farmers Management</a>
                                        <span class="breadcrumb__seperator">
                                            <span class="la la-slash"></span>
                                        </span>
                                    </li>

                                    <li class="atbd-breadcrumb__item">
                                        <span>AddFarmer</span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div class="card">
                <div class="card-header">
                    <h2>Add Farmer</h2>
                    <p class="text-success mb-0 p-left-50">
                        @TempData["SucMsgFarmer"]
                    </p>
                    <p class="text-danger mb-0 p-left-50">
                        @TempData["ErrMsgFarmer"]
                    </p>
                </div>


                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label for="inputEmail4" class="form-label">Name<span style="color:red">*</span></label>
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Farmer Name" })
                            @Html.HiddenFor(m => m.PK_Farmerid)
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputPassword4" class="form-label">Amount<span style="color:red">*</span></label>
                            @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @Placeholder = "Amount", @onkeypress = "return isNumberKey(event);" })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputEmail4" class="form-label">Mobile</label>
                            @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control", @Placeholder = "Mobile", @onkeypress = "return isNumberKey(event);", @maxlength = "10" })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputPassword4" class="form-label">Email</label>
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @Placeholder = "Email" })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputPassword4" class="form-label">Gata/Khasra No.<span style="color:red">*</span></label>
                            @Html.TextBoxFor(m => m.GataKhasaraN, new { @class = "form-control", @Placeholder = "Gata/Khasra No." })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputEmail4" class="form-label">Area<span style="color:red">*</span></label>
                            @Html.TextBoxFor(m => m.Hectare, new { @class = "form-control", @placeholder = "Hectare", @onkeypress = "return isNumberKey(event);" })
                        </div>
                        <div class="col-md-3 mb-3" style="display:none">
                            <label for="inputPassword4" class="form-label">Acre<span>&nbsp;</span></label>
                            @Html.TextBoxFor(m => m.Acre, new { @class = "form-control", @Placeholder = "Acre", @onkeypress = "return isNumberKey(event);" })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputEmail4" class="form-label">SQFT<span style="color:red">*</span></label>
                            @Html.TextBoxFor(m => m.SQFT, new { @class = "form-control", @Placeholder = "SQFT.", @onkeypress = "return isNumberKey(event);" })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputPassword4" class="form-label">Address</label>
                            @Html.TextAreaFor(m => m.Address, new { @class = "form-control", @Placeholder = "Address" })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputEmail4" class="form-label">Village</label>
                            @Html.TextBoxFor(m => m.Village, new { @class = "form-control", @Placeholder = "Village" })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputPassword4" class="form-label">Pincode<span style="color:red">*</span></label>
                            @Html.TextBoxFor(m => m.Pincode, new { @class = "form-control", @Placeholder = "PinCode", @onchange = "return getstatecity();", @onkeypress = "return isNumberKey(event);" })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputEmail4" class="form-label">City</label>
                            @Html.TextBoxFor(m => m.City, new { @class = "form-control", @Placeholder = "City", @readonly = "true" })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputPassword4" class="form-label">State</label>
                            @Html.TextBoxFor(m => m.State, new { @class = "form-control", @Placeholder = "State", @readonly = "true" })
                        </div>
                        <div class="col-md-3 mb-3" style="display:none">
                            <label for="inputEmail4" class="form-label"> Associate Id</label>
                            @Html.TextBoxFor(m => m.AssociateLoginID, new { @class = "form-control", @Placeholder = "Associate ID", @onchange = "return getSponsorName();" })
                            @Html.HiddenFor(m => m.AssociateID)
                        </div>
                        <div class="col-md-3 mb-3" style="display:none">
                            <label for="inputEmail4" class="form-label"> Associate Name</label>
                            @Html.TextBoxFor(m => m.DelearName, new { @class = "form-control", @Placeholder = "Associate Name", @readonly = "readonly" })
                        </div>
                        <div class="col-md-3 mb-3" style="display:none">
                            <label for="inputEmail4" class="form-label">Date of birth</label>
                            @Html.TextBoxFor(m => m.DOB, new { @class = "form-control", @Placeholder = "Date of birth" })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputEmail4" class="form-label"> Registry File </label>
                            <input type="file" class="form-control" id="IDProof" name="IDProof" />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputEmail4" class="form-label">Farmer Photo</label>
                            <input type="file" class="form-control" id="Photo" name="Photo" />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputEmail4" class="form-label">Status</label>
                            @Html.DropDownListFor(m => m.Status, new SelectList(ViewBag.ddlStatus, "Value", "Text"), new { @class = "form-control" })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="inputEmail4" class="form-label">Registry Date</label>
                            @Html.TextBoxFor(m => m.RegistryDate, new { @class = "form-control", @Placeholder = "Registry Date" })
                           
                        </div>
                        @*<div class="col-md-3 mb-3">
                                <label for="inputEmail4" class="form-label">CompanyName<span style="color:red">*</span></label>
                                @Html.DropDownListFor(m => m.Fk_CompanyId, new SelectList(ViewBag.ddlcompany, "Value", "Text"), new { @class = "form-control" })
                            </div>*@
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-lg-6 mb-3">
                            <div class="d-flex">
                                @if (Model != null && Model.PK_Farmerid == null)
                                {
                                    <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Save" id="btnSave" name="btnSave" />
                                }
                                else
                                {
                                    <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Update" id="btnUpdate" name="btnUpdate" />
                                }
                                <input type="hidden" id="UserType" value="@Session["UserType"]" />
                                <input type="hidden" id="UserTypeName" value="@Session["UserTypeName"]" />
                                <a class="btn btn-info" href="/Farmers/FarmerList" style="margin-left:5px;">Back To List</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<script src="~/files/bower_components/jquery/js/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>

<script>
    $(document).ready(function () {
        $("#divload").css({ 'display': 'none' });
        $("#divload").css({ 'display': 'none' });
        var cityuse = [];
        $("#loader").css({ 'display': '' });
        $.ajax({
            url: 'GetUserList',
            type: 'Post',
            success: function (response) {
                if (response != null) {
                    $(response).each(function (index, item) {
                        cityuse.push(item.UserName + "(" + item.LoginIDD + ")");
                    });
                    debugger
                    $('#AssociateLoginID').autocomplete({
                        source: cityuse,
                        select: function (event, ui) {
                            var str = ui.item.label;
                            var strsplit = str.split("(");
                            $('#AssociateID').val(strsplit[1].substr(0, strsplit[1].length - 1));
                        }
                    })
                }
            },
            error: function () {
                alert('Some Thing wrong!');
                $("#loader").css({ 'display': 'none' });
            }
        });
        var photo = $('#idphoto').val();
        var IdProo = $('#ididproof').val();

        if (IdProo == null || IdProo == "") {
            $("#IDProof").removeClass('hidePhoto');
            $("#IDProof").addClass('ShowPhoto');

        }
        else {
            $("#IDProof").addClass('hidePhoto');
            $("#IDProof").removeClass('ShowPhoto');
        }
        if (photo == null || photo == "") {
            $("#Photo").removeClass('hidePhoto');
            $("#Photo").addClass('ShowPhoto');

        }
        else {
            $("#Photo").addClass('hidePhoto');
            $("#Photo").removeClass('ShowPhoto');
        }
        var UserType = $('#UserType').val();
        var UserTypeName = $('#UserTypeName').val();
        if (UserType == 'Admin' && UserTypeName != 'Admin' && UserTypeName != "") {
            GetMenuDetails();
        }

    });
    function GetMenuDetails() {
        debugger
        var URL = "/Farmers/AddFarmers";
        $.ajax({
            type: "POST",
            url: "/Master/GetMenuDetails",
            data: { URL: URL },
            dataType: "json",
            success: function (data) {
                var obj = jQuery.parseJSON(data);
                console.log(obj)
                for (var i = 0; i < obj.length; i++) {
                    if (obj[i].FormSave == true) {
                        $('#btnSave').show();

                        $("#btnSave").removeAttr('disabled');
                    }
                    else {
                        $('#btnSave').hide();

                        $("#btnSave").attr('disabled', 'disabled');
                    }
                    debugger
                    if (obj[i].FormUpdate == true && $('#PK_Farmerid').val() != "") {
                        $('#btnUpdate').show();

                        $("#btnUpdate").removeAttr('disabled');
                    }
                    else {
                        $('#btnUpdate').hide();
                        $("#btnUpdate").attr('disabled', 'disabled');
                    }
                }
            },
            error: function () {
                alert("Error occured!!")
            }
        });
    }
    $('#Hectare').keyup(function () {
        var getacre = parseFloat(2.47107 * $(this).val()).toFixed(3);
        $('#Acre').val(getacre);
        var getsqft = parseFloat(107639 * $(this).val()).toFixed(3);
        $('#SQFT').val(getsqft);
    });
    $('#Acre').keyup(function () {
        var gethectare = parseFloat(0.404686 * $(this).val()).toFixed(3);
        $('#Hectare').val(gethectare);
        var getsqft = parseFloat(43560 * $(this).val()).toFixed(3);
        $('#SQFT').val(getsqft);
    });
    $('#SQFT').keyup(function () {
        var gethectare = parseFloat($(this).val() / 107639).toFixed(3);
        $('#Hectare').val(gethectare);
        var getacre = parseFloat($(this).val() / 43560).toFixed(3);
        $('#Acre').val(getacre);
    });
    $("#btnPhoto").click(function () {
        $(".hid1").removeClass('hidePhoto');
        $(".hid1").addClass('ShowPhoto');
        $("#idphoto").addClass('hidePhoto');
        $("#btnPhoto").addClass('hidePhoto');
    });
    $("#btnidpro").click(function () {

        $(".hid").removeClass('hidePhoto');
        $(".hid").addClass('ShowPhoto');
        $("#ididproof").addClass('hidePhoto');
        $("#btnidpro").addClass('hidePhoto');

    });

    $('#DOB').datepicker({
        dateFormat: 'dd/mm/yy',
        changeYear: true,
        changeMonth: true,
        yearRange: "1900:2021"
    });

    $('#RegistryDate').datepicker({
        dateFormat: 'dd/mm/yy',
        changeYear: true,
        changeMonth: true,
    });



    function getstatecity() {
        $(".errortext").removeClass("errortext");
        $.ajax({
            url: "/Admin/GetStateCity",
            Type: "Get",
            DataType: "JSON",
            data: { Pincode: $("#Pincode").val() },
            success: function (data) {
                if (data.Result == "1") {
                    $("#State").val(data.State);
                    $("#City").val(data.City);
                }
                else {
                    $("#State").val('');
                    $("#City").val('');
                    $("#Pincode").val('');
                    $("#Pincode").addClass('errortext');
                    $('#Pincode').focus();
                    alert(data.Result);

                }


            }

        });
    }

    function getSponsorName() {

        $("#divload").css({ 'display': '' });
        var sponsorID = $('#AssociateID').val();
        $.ajax({
            url: 'GetSponsorName', type: 'post', dataType: 'json',
            data: { 'SponsorID': sponsorID },
            success: function (data) {
                $("#divload").css({ 'display': 'none' });
                if (data.Result == "yes") {
                    $("#DelearName").val(data.DelearName);
                    $("#DelearName").removeClass('errortext');
                    $("#AssociateID").removeClass('errortext');
                }
                else if (data.Result == "no") {
                    alert("Invalid Associate ID");
                    $("#DelearName").val('');
                    $("#DelearName").addClass('errortext');
                    $("#AssociateID").addClass('errortext');
                    $('#AssociateID').focus();
                    $('#AssociateID').val('');

                }
            }
        });
    }
    function isNumberKey(evt) {

        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function validateform() {
        $("#divload").css({ 'display': '' });
        debugger
        $(".errortext").removeClass("errortext");
        if ($('#Name').val() == '') {
            $("#Name").addClass('errortext');
            $("#divload").css({ 'display': 'none' });
            $('#Name').focus();
            return false;
        }
        if ($('#Amount').val() == '') {
            $("#Amount").addClass('errortext');
            $("#divload").css({ 'display': 'none' });
            $('#Amount').focus();
            return false;
        }
        if ($('#GataKhasaraN').val() == '') {
            $('#GataKhasaraN').addClass('errortext');
            $("#divload").css({ 'display': 'none' });
            $('#GataKhasaraN').focus();
            return false;
        }
        if ($('#Area').val() == '') {
            $("#Area").addClass('errortext');
            $("#divload").css({ 'display': 'none' });
            $('#Area').focus();
            return false;
        }
        if ($('#SQFT').val() == '') {
            $("#SQFT").addClass('errortext');
            $("#divload").css({ 'display': 'none' });
            $('#SQFT').focus();
            return false;
        }
        if ($('#Pincode').val() == '') {
            $("#Pincode").addClass('errortext');
            $("#divload").css({ 'display': 'none' });
            $('#Pincode').focus();
            return false;
        }

        if ($('#Fk_CompanyId').val() == '0') {
            $('#Fk_CompanyId').addClass('errortext');
            $("#divload").css({ 'display': 'none' });
            $('#Fk_CompanyId').focus();
            return false;
        }
        $("#divload").css({ 'display': '' });
        return true;
    }

</script>
<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>